*** Begin Patch
*** Update File: c:\D\Autofix_Mermaid\autofix_mermaidV3.6\js\app.js
@@
 async function render(){
-  let { code, notes } = applyFixes(editor.value);
-  editor.value = code; // keep in sync
-  const theme = themeSel.value;
-  applyLayoutSelection(mermaid, layoutSel.value);
-  mermaid.initialize({ startOnLoad:false, securityLevel:'strict', theme });
-  if(!(await validate(code))){ preview.innerHTML=''; return; }
-  const { svg } = await mermaid.render('mmd-'+Date.now(), code);
-  preview.innerHTML = sanitize(svg);
+  // Run autofixes but do NOT forcibly overwrite the editor by default.
+  // This keeps render as a preview operation. If you want to persist fixes,
+  // call render({ persistFixes: true }) or use the dedicated autofix button.
+  const { code: fixedCode, notes } = applyFixes(editor.value);
+  const codeToRender = (typeof fixedCode === 'string' && fixedCode.length > 0) ? fixedCode : editor.value;
+
+  // Optionally persist fixes back to the editor. Keep default behavior = false to
+  // avoid surprising UX where preview mutates user text on every render.
+  // If you prefer the old behaviour, call render({ persistFixes: true }) or
+  // set persistOnRender = true here.
+  const persistOnRender = false;
+  if (persistOnRender) editor.value = codeToRender;
+
+  const theme = themeSel.value;
+  applyLayoutSelection(mermaid, layoutSel.value);
+  mermaid.initialize({ startOnLoad:false, securityLevel:'strict', theme });
+
+  if(!(await validate(codeToRender))){ preview.innerHTML=''; return; }
+
+  // mermaid.render can return either a string (svg) or an object { svg, bindFunctions }
+  // depending on mermaid build/version. Handle both safely.
+  const renderResult = await mermaid.render('mmd-'+Date.now(), codeToRender);
+  const svg = (typeof renderResult === 'string') ? renderResult : (renderResult && renderResult.svg) ? renderResult.svg : String(renderResult);
+  preview.innerHTML = sanitize(svg);
 }
*** End Patch
